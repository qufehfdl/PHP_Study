<?php

// 변수 타입을 명시하지 않는다

        $var = "값";


// 전역변수를 함수내부에서 접근하고자 할 때에는 global 키워드를 사용해야 한다

        function test1(){
            echo "함수 내부에서 호출한 전역 변수  {$var}" // 출력되지 않는다
            global $var
            echo "함수 내부에서 호출한 전역 변수  {$var}" // "값" 출력
        }


// PHP는 모든 전역 변수를 $GLOBALS 배열에 저장

        function test2(){
            echo "함수 내부에서 호출한 전역 변수 {$var}" // 출력되지 않는다

            //global 키워드를 사용하는 대신에 $GLOBALS 배열을 사용하여 전역 변수에 접근
            echo "함수 내부에서 호출한 전역 변수 {$GLOBALS['var']}"; // "값" 출력
        }


// 미리 정의된 전역 변수인 superglobal     :    특별한 선언 없이 바로 사용 가능

        1. $GLOBALS     : 스크립트 내에서 선언된 모든 변수를 배열 형태로 저장
        
        2. $_SERVER     : 현재 실행 중인 스크립트에 대한 서버 및 실행 환경과 관련된 정보를 포함하고 있다
                          클라이언트, 서버, 스크립트, 요청 등에 대한 정보를 제공한다 
                          예를 들어, $_SERVER['REQUEST_METHOD']는 현재 요청의 HTTP 메소드를 나타낸다

        3. $_GET        : URL의 쿼리스트링을 통해 전달된 변수와 값에 대한 정보를 담고 있는 변수
                          HTTP GET 메소드를 사용하여 데이터를 전송할 때 사용된다
                          예를 들어, URL에 example.com?name=taehwa&age=33와 같이 전달된 데이터는 $_GET['name']과 $_GET['age']에서 접근할 수 있습니다.

        4. $_POST       : HTTP POST 요청을 통해 전송된 변수와 값에 대한 정보를 담고 있는 변수
                          폼 데이터나 API 호출 등에서 사용된다 
                          예를 들어, 폼에서 전송된 데이터는 $_POST['field_name']에서 접근할 수 있다

        5. $_FILES      : 서버로 전송된 파일에 대한 정보를 담고 있는 변수 
                         파일의 원본 이름, 임시 파일 경로, 파일 크기 등의 정보를 제공 
                         예를 들어, 파일 업로드 폼에서 전송된 파일은 $_FILES['file_field_name']에서 접근할 수 있다

        6. $_COOKIE
        7. $_SESSION

        8. $_REQUEST    : $_GET, $_POST, $_COOKIE 등의 데이터를 하나의 변수로 통합한 것
                          GET, POST, COOKIE 등의 요청을 모두 포함하는 복합 변수

        9. $_ENV        : 현재 서버 환경 변수에 대한 정보를 담고 있는 변수 
                          서버의 환경 설정에 따라 정의된 환경 변수들을 포함한다
                          예를 들어, $_ENV['PATH']는 서버의 PATH 환경 변수 값을 나타낸다


// 정적(static) 변수 : 정적 변수는 함수가 호출될 때마다 변수가 재선언되지 않고 이전 상태를 유지하는 특징

        function counter() {
            static $count = 0;
            echo "함수 내부에서 호출한 static 변수 {$count}";
            $count++;
        }
        counter(); // 1
        counter(); // 2
        counter(); // 3

// 가변 변수

        $test3 = "test4";
        $test4 = "test5";
        $test5 = "test6";
        $test6 = "test7";
        $test7 = "test3";  

        echo $test3;       // test4
        echo $$test3;      // $test4 -> test5
        echo $$$test3;     // $$test4 -> $test5 -> test6
        echo $$$$test3;    // $$$test4 -> $$test5 -> $test6 -> test7
        echo $$$$$test3;   // $$$$test4 -> $$$test5 -> $$test6 -> $test7 -> test3

// 배열

        PHP에서 배열은 맵(map)으로 이루져있다고 생각하자
        동적 크기

        배열 생성
        $배열이름 = array();

        인덱스를 이용한 요소 참조 방법
        $배열이름[인덱스]

        배열요소 추가 방법1
        $배열이름[0] = "hihi";
        $배열이름[1] = "hello";
        $배열이름[2] = "hi";

        배열요소 추가 방법2 : 배열 생성과 동시에 초기화

        $배열이름 = array(배열요소1, 배열요소2, ...);


        인덱스를 숫자뿐만 아니라 문자도 사용 가능 : 연관배열!!

        $배열이름 = array("key1" => 값1, "key2" => 값2, "key3" => 값3, ...);


// 클래스

        class 클래스이름
        {
            클래스의 프로퍼티과 메소드의 정의;
        }

// 생성자  :  생성자의 이름은 __construct()로 정해져 있다

        class 클래스이름
        {
            function __construct(매개변수1, 매개변수2, ...)
            {
                생성자가 호출될 때 실행될 코드;
            }
        }

// 인스턴스 생성

        $객체이름 = new 클래스이름(인수1, 인수2, ...);

// 클래스 멤버에 접근

        $객체이름->프로퍼티이름;
        $객체이름->메소드이름;





○○○○○○○○○○○○○○○○○○○○○  php 함수  ○○○○○○○○○○○○○○○○○○○○○

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
define( '작명', 값 ) // 상수 만드는 방법

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
dirname(__FILE__) . '~~~.php' ;     
    
    함수는 파일 경로에서 디렉토리 부분만 추출하는 역할

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
network_home_url($path = '', $scheme = 'http')
    
    WordPress에서 제공하는 함수이고 WordPress의 네트워크(멀티사이트) 설정에 따라 홈 URL을 반환한다
    
    $path: URL 경로 또는 추가 경로를 나타내는 문자열, 기본값은 빈 문자열('')이며 생략 가능, 주어진 경로가 비어있는 경우 홈 URL 자체가 반환
    $scheme: URL에 사용될 스키마(프로토콜)을 나타내는 문자열, 기본값은 'http'이고 'http' 또는 'https' 값을 사용할 수 있다

    예를 들어, network_home_url('', 'http')은 현재 네트워크의 홈 URL을 'http://'로 시작하는 URL 문자열로 반환
    WordPress에서 사용되는 함수이므로 일반적인 PHP 환경에서 실행되는 경우 정의되지 않았다는 오류가 발생할 수 있다
    WordPress에서 사용하거나 WordPress 환경에서 실행해야 올바르게 동작한다

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
gettype() : 전달받은 데이터의 타입을 출력 
 
settype() : 전달받은 변수의 타입을 변경
            변경 성공 여부에 따라 true/false

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
count()   : 배열의 모든 요소의 개수를 반환
sizeof()  :            ~

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
isset()   : 전달받은 변수가 선언되어 있는지를 검사
            선언된 변수가 있다면 true를, 없다면 false를 반환
 
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
unset()   : 함수는 전달받은 변수를 제거합니다.

 
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
empty()   : 함수는 전달받은 변수가 비어있는지를 검사합니다.
            PHP에서는 다음과 같은 값을 가지는 변수를 비어있다고 인식합니다.

        - 정수 0
        - 실수 0.0
        - 문자열 "0"
        - 빈 문자열 ""
        - null
        - false
        - 빈 배열 array()
        - 초기화되지 않은 변수

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
strlen()  : 전달받은 문자열의 길이를 반환        
            strlen() 함수에 영문자만이 아닌 한글이 포함된 문자열이 전달되면, 문자열의 길이가 아닌 문자열의 총 바이트(byte) 수를 반환

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
@set_time_limit();

        PHP 스크립트의 최대 실행 시간을 설정 
        스크립트의 실행 시간 제한은 서버의 설정 또는 php.ini 파일에 의해 제한될 수 있다 
        하지만 이 함수를 사용하면 스크립트 내에서 실행 시간 제한을 재설정할 수 있다

        @ 기호는 PHP의 오류 제어 연산자 : 해당 함수에 대한 오류 메시지 출력을 억제

        ※ 주의
        실행 시간 제한을 설정하는 것은 서버에 부하를 줄 수 있으므로 신중하게 사용 
        너무 긴 실행 시간 제한은 스크립트의 실행을 지연시킬 수 있고
        너무 짧은 실행 시간 제한은 스크립트의 실행을 중단시킬 수 있다

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------




// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------










?>